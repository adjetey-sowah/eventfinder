version: 0.2

phases:
  pre_build:
    commands:
      - echo "Starting pre-build phase..."
      # Set environment variables (adjust these as needed)
      - export AWS_REGION=us-west-2
      - export ECR_PUBLIC_REPOSITORY=public.ecr.aws/r1b3l1w9/giftedlabs/eventfinder
      - export ECR_PRIVATE_REPOSITORY=650251709711.dkr.ecr.us-west-2.amazonaws.com/giftedlab/eventfinder
      - export CONTAINER_NAME=nginx
      #
      - echo "Logging in to Private ECR..."
      - aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin $ECR_PRIVATE_REPOSITORY
      - echo "Logging in to Public ECR..."
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
      #
      - echo "Setting IMAGE_TAG..."
      - export IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)

  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t eventfinder .
      #
      - echo "Tagging Docker image for ECR repositories..."
      - docker tag eventfinder:latest $ECR_PRIVATE_REPOSITORY:$IMAGE_TAG
      - docker tag eventfinder:latest $ECR_PUBLIC_REPOSITORY:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing Docker images to Private and Public ECR..."
      - docker push $ECR_PRIVATE_REPOSITORY:$IMAGE_TAG
      - docker push $ECR_PUBLIC_REPOSITORY:$IMAGE_TAG
      #
      - echo "Tagging images as 'latest' and pushing..."
      - docker tag $ECR_PRIVATE_REPOSITORY:$IMAGE_TAG $ECR_PRIVATE_REPOSITORY:latest
      - docker push $ECR_PRIVATE_REPOSITORY:latest
      - docker tag $ECR_PUBLIC_REPOSITORY:$IMAGE_TAG $ECR_PUBLIC_REPOSITORY:latest
      - docker push $ECR_PUBLIC_REPOSITORY:latest
      #
      - echo "Creating imagedefinitions.json artifact..."
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $ECR_PUBLIC_REPOSITORY:$IMAGE_TAG > imagedefinitions.json
      - echo "Artifact created:"
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
